{"version":3,"sources":["containers/LoginPage/index.js","components/Header/index.js","components/Content/index.js","containers/HomePage/index.js","App.js","reportWebVitals.js","index.js"],"names":["LoginPage","Header","className","span","src","Content","boardList","Item","href","style","padding","title","type","shape","icon","PlusOutlined","map","item","boardname","bordered","FieldTimeOutlined","moment","created","format","count","backgroundColor","id","HomePage","useState","setBoardList","useEffect","axios","method","url","then","response","data","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAUeA,MARf,WACI,OACI,yB,wDCoBOC,MAnBf,WACE,OACI,eAAC,IAAD,CAAKC,UAAU,SAAf,UACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,qBAAKD,UAAU,OAAf,SACE,gDAGJ,eAAC,IAAD,CAAKC,KAAM,EAAGD,UAAU,UAAxB,UACI,cAAC,IAAD,CACEA,UAAU,MACVE,IAAI,qEAEN,sD,sFCoDGC,MA/Df,YAAiC,IAAdC,EAAa,EAAbA,UACjB,OACE,sBAAKJ,UAAU,UAAf,UACE,8BACE,eAAC,IAAD,CAAYA,UAAU,aAAtB,UACE,cAAC,IAAWK,KAAZ,UACE,mBAAGC,KAAK,GAAR,kCAEF,cAAC,IAAWD,KAAZ,UACE,mBAAGC,KAAK,GAAR,kCAEF,cAAC,IAAWD,KAAZ,UACE,mBAAGC,KAAK,GAAR,uCAIN,8BACE,mBAAGN,UAAU,eAAb,wBAEF,qBAAKA,UAAU,cAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKC,KAAM,EAAGM,MAAO,CAAEC,QAAS,QAAhC,SACE,qBAAKR,UAAU,UAAf,SACE,cAAC,IAAD,CAASS,MAAM,YAAf,SACE,cAAC,IAAD,CAAQC,KAAK,UAAUC,MAAM,SAASC,KAAM,cAACC,EAAA,EAAD,YAIjDT,EAAUU,KAAI,SAACC,GACd,OACE,cAAC,IAAD,CAAKd,KAAM,EAAiBM,MAAO,CAAEC,QAAS,QAA9C,SACE,qBAAKR,UAAU,aAAf,SACE,eAAC,IAAD,CAAMS,MAAOM,EAAKC,UAAWC,UAAU,EAAvC,UACE,cAACC,EAAA,EAAD,IAAsB,IACrBC,IAAOJ,EAAKK,SAASC,OAAO,cAC7B,gCACE,cAAC,IAAD,CACErB,UAAU,mBACVsB,MAAO,EACPf,MAAO,CAAEgB,gBAAiB,aAE5B,cAAC,IAAD,CACEvB,UAAU,mBACVsB,MAAO,EACPf,MAAO,CAAEgB,gBAAiB,aAE5B,cAAC,IAAD,CACEvB,UAAU,qBACVsB,MAAO,EACPf,MAAO,CAAEgB,gBAAiB,sBAnBjBR,EAAKS,gB,kBCVvBC,MAnBf,WAAqB,IAAD,EACgBC,mBAAS,IADzB,mBACXtB,EADW,KACAuB,EADA,KAWlB,OATAC,qBAAU,WACRC,IAAM,CACJC,OAAQ,MACRC,IAAK,gCAEJC,MAAK,SAAUC,GACdN,EAAaM,EAASC,WAEzB,IAED,sBAAKlC,UAAU,OAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAASI,UAAWA,QCGb+B,MAhBf,WACE,OACE,8BACI,cAAC,IAAD,UACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,QAAQC,OAAK,EAACC,UAAWb,YCLhCc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.99a33c83.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction LoginPage() {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { Avatar } from \"antd\";\r\nfunction Header() {\r\n  return (\r\n      <Row className=\"header\">\r\n        <Col span={20}>\r\n          <div className=\"logo\">\r\n            <span>FunRetro</span>\r\n          </div>\r\n        </Col>\r\n        <Col span={4} className='inf-avt'>\r\n            <Avatar\r\n              className=\"avt\"\r\n              src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n            />\r\n            <p>Huynh Thai Anh</p>\r\n        </Col>\r\n      </Row>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Breadcrumb, Badge } from \"antd\";\r\nimport { Button, Tooltip, Row, Col, Card } from \"antd\";\r\nimport { PlusOutlined, FieldTimeOutlined } from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nfunction Content({ boardList }) {\r\n  return (\r\n    <div className=\"content\">\r\n      <div>\r\n        <Breadcrumb className=\"breadcrumb\">\r\n          <Breadcrumb.Item>\r\n            <a href=\"\">Application Center</a>\r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item>\r\n            <a href=\"\">Application Center</a>\r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item>\r\n            <a href=\"\">Application Center</a>\r\n          </Breadcrumb.Item>\r\n        </Breadcrumb>\r\n      </div>\r\n      <div>\r\n        <p className=\"text-myboard\">My Board</p>\r\n      </div>\r\n      <div className=\"list-boards\">\r\n        <Row>\r\n          <Col span={5} style={{ padding: \"15px\" }}>\r\n            <div className=\"box-add\">\r\n              <Tooltip title=\"Add Board\">\r\n                <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} />\r\n              </Tooltip>\r\n            </div>\r\n          </Col>\r\n          {boardList.map((item) => {\r\n            return (\r\n              <Col span={5} key={item.id} style={{ padding: \"15px\" }}>\r\n                <div className=\"board-user\">\r\n                  <Card title={item.boardname} bordered={true}>\r\n                    <FieldTimeOutlined />{\" \"}\r\n                    {moment(item.created).format(\"YYYY/MM/DD\")}\r\n                    <div>\r\n                      <Badge\r\n                        className=\"site-badge-count\"\r\n                        count={1}\r\n                        style={{ backgroundColor: \"#00FF00\" }}\r\n                      />\r\n                      <Badge\r\n                        className=\"site-badge-count\"\r\n                        count={1}\r\n                        style={{ backgroundColor: \"#FF0000\" }}\r\n                      />\r\n                      <Badge\r\n                        className=\"site-badge-count-4\"\r\n                        count={1}\r\n                        style={{ backgroundColor: \"#FF00FF\" }}\r\n                      />\r\n                    </div>\r\n                  </Card>\r\n                </div>\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport { Layout, Menu, Breadcrumb } from \"antd\";\r\nimport \"./index.css\";\r\nimport 'antd/dist/antd.css';\r\nimport Header from '../../components/Header'\r\nimport Content from \"../../components/Content\";\r\nimport axios from 'axios'\r\n\r\nfunction HomePage() {\r\n  const [boardList, setBoardList] = useState([]);\r\n  useEffect(() => {\r\n    axios({\r\n      method: 'get',\r\n      url: 'http://localhost:4000/board',\r\n    })\r\n      .then(function (response) {\r\n        setBoardList(response.data);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className='home'>\r\n        <Header/>\r\n        <Content boardList={boardList}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport LoginPage from './containers/LoginPage';\nimport HomePage from './containers/HomePage'\n\nfunction App() {\n  return (\n    <div>\n        <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <LoginPage />\n          </Route>\n          <Route path=\"/home\" exact component={HomePage}>\n          </Route>\n        </Switch>\n        </Router>\n      </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}